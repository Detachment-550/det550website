<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Cadetevent_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /**
     * Get cadetevent by eventID
     *
     * @param int $eventID - event id
     * @return cadetevent - desired event object
     */
    function get_cadetevent($eventID)
    {
        return $this->db->get_where('cadetEvent',array('eventID'=>$eventID))->row_array();
    }
    
    /**
     * Gets current total of pt or llab in the current year.
     *
     * @param int $event - event id
     * @return int - total count.
     */
    function get_event_total($event)
    {
        $this->db->from('cadetEvent');
        $this->db->where($event, 1);
        $this->db->where('YEAR(date) = YEAR(CURDATE())');
        if(date("m") >= 1 && date("m") < 6)
        {
            $this->db->where('MONTH(date) > 0');
            $this->db->where('date <= ' . Date('Ymd'));
            $query = $this->db->where('MONTH(date) < 6');
        }
        else
        {
            $this->db->where('MONTH(date) > 5');
            $this->db->where('date <= ' . Date('Ymd'));
            $query = $this->db->where('MONTH(date) < 13');
        }

        return $query->count_all_results();
    }
    
    /**
     * Gets 5 closest cadetevents by date.
     *
     * @return array - 5 closest events
     */
    function get_last_five_events()
    {
        return $this->db->query('SELECT * FROM cadetEvent ORDER BY ABS( DATEDIFF( cadetEvent.date, NOW() ) ) LIMIT 5')->result_array();
    }

    /**
     * Gets x closest cadetevents by date.
     *
     * @param int $x - number of events
     * @return array - x closest events
     */
    function get_last_x_events($x)
    {
        return $this->db->query('SELECT * FROM cadetEvent ORDER BY ABS( DATEDIFF( cadetEvent.date, NOW() ) ) LIMIT '.$x)->result_array();
    }

    /**
     * Get all cadetevent.
     *
     * @return array - all events
     */
    function get_all_cadetevents()
    {
        return $this->db->query('SELECT * FROM cadetEvent ORDER BY ABS( DATEDIFF( CAST(cadetEvent.date as DATE), NOW() ) )')->result_array();
    }

    /**
     * Get all cadet events for the current semester.
     *
     * @return array - all current events
     */
    function get_current_cadetevents()
    {
        $this->db->where('YEAR(date) = YEAR(CURDATE())');

        if(date("m") >= 1 && date("m") < 6)
        {
            $this->db->where('MONTH(date) > 0');
            $this->db->where('MONTH(date) < 6');
        }
        else
        {
            $this->db->where('MONTH(date) > 5');
            $this->db->where('MONTH(date) < 13');
        }

        return $this->db->get('cadetEvent')->result_array();
    }

    /**
     * Get events from the current week.
     *
     * @return array - all events this week
     */
    function get_week_events()
    {
        $this->db->where('YEAR(date) = YEAR(CURDATE())');
        $this->db->where('MONTH(date) = MONTH(CURDATE())');
        $this->db->where('WEEK(date) = WEEK(CURDATE())');

        return $this->db->get('cadetEvent')->result_array();
    }

    /**
     * Add new cadetevent.
     *
     * @param cadetevent $params - event parameters
     * @return int - new event id
     */
    function add_cadetevent($params)
    {
        $this->db->insert('cadetEvent',$params);
        return $this->db->insert_id();
    }
    
    /**
     * Updated an existing event.
     *
     * @param int $eventID - event id
     * @param cadetevent $params - updated event parameters
     * @return cadetevent - updated event
     */
    function update_cadetevent($eventID,$params)
    {
        $this->db->where('eventID',$eventID);
        return $this->db->update('cadetEvent',$params);
    }
    
    /**
     * Delete cadetevent.
     *
     * @params int $eventID - event id
     * @return cadetevent - deleted event
     */
    function delete_cadetevent($eventID)
    {
        return $this->db->delete('cadetEvent',array('eventID'=>$eventID));
    }
}
